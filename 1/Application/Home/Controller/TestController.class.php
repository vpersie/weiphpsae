<?phpnamespace Home\Controller;class TestController extends HomeController {	function uid() {		// $list = M ()->query ( "SELECT * FROM information_schema.`COLUMNS` WHERE TABLE_SCHEMA='weiphp' AND COLUMN_NAME like '%uid%'" );		// foreach ( $list as $vo ) {		// $type = str_replace ( ' unsigned', '', $vo ['COLUMN_TYPE'] );		// if (empty ( $vo ['COLUMN_TYPE'] ) || $type == $vo ['COLUMN_TYPE'])		// continue;				// $wp = C ( 'DB_PREFIX' );		// $t = $vo ['TABLE_NAME'];		// if ($wp != 'wp_') {		// $t = str_replace ( 'wp_', $wp, $vo ['TABLE_NAME'] );		// }		// $field = $vo ['COLUMN_NAME'];				// if ($vo ['COLUMN_DEFAULT'] === '') {		// $default = '';		// } elseif (is_numeric ( $vo ['COLUMN_DEFAULT'] )) {		// $default = ' DEFAULT ' . $vo ['COLUMN_DEFAULT'];		// } elseif (is_string ( $vo ['COLUMN_DEFAULT'] )) {		// $default = ' DEFAULT \'' . $vo ['COLUMN_DEFAULT'] . '\'';		// } else {		// $default = '';		// }				// $sql = "ALTER TABLE `$t` MODIFY COLUMN `$field` $type {$default} COMMENT '{$vo['COLUMN_COMMENT']}' ;<br/>";				// echo $sql;		// }		$sql = "ALTER TABLE `wp_attachment` MODIFY COLUMN `uid` int(10) DEFAULT 0 COMMENT '用户ID' ;
		ALTER TABLE `wp_auth_group_access` MODIFY COLUMN `uid` int(10) COMMENT '用户id' ;
		ALTER TABLE `wp_card_member` MODIFY COLUMN `uid` int(10) COMMENT '用户UID' ;
		ALTER TABLE `wp_document` MODIFY COLUMN `uid` int(10) DEFAULT 0 COMMENT '用户ID' ;
		ALTER TABLE `wp_exam_answer` MODIFY COLUMN `uid` int(10) COMMENT '用户UID' ;
		ALTER TABLE `wp_forms_value` MODIFY COLUMN `uid` int(10) COMMENT '用户ID' ;
		ALTER TABLE `wp_forum` MODIFY COLUMN `uid` int(10) DEFAULT 0 COMMENT '用户ID' ;
		ALTER TABLE `wp_member` MODIFY COLUMN `uid` int(10) COMMENT '用户ID' ;
		ALTER TABLE `wp_member_public` MODIFY COLUMN `uid` int(10) COMMENT '用户ID' ;
		ALTER TABLE `wp_member_public_link` MODIFY COLUMN `uid` int(10) COMMENT '管理员UID' ;
		ALTER TABLE `wp_store` MODIFY COLUMN `uid` int(10) DEFAULT 0 COMMENT '用户ID' ;
		ALTER TABLE `wp_suggestions` MODIFY COLUMN `uid` int(10) DEFAULT 0 COMMENT '用户ID' ;
		ALTER TABLE `wp_survey_answer` MODIFY COLUMN `uid` int(10) COMMENT '用户UID' ;
		ALTER TABLE `wp_test_answer` MODIFY COLUMN `uid` int(10) COMMENT '用户UID' ;
		ALTER TABLE `wp_userdata` MODIFY COLUMN `uid` int(10) COMMENT '用户id' ;
		ALTER TABLE `wp_xydzp_log` MODIFY COLUMN `uid` int(10) DEFAULT 0 COMMENT '用户id' ;";				$wp = C ( 'DB_PREFIX' );		if ($wp != 'wp_') {			$sql = str_replace ( 'wp_', $wp, $sql );		}		$sql = explode ( ';', $sql );		$sql = array_filter ( $sql );		foreach ( $sql as $s ) {			$s = trim ( $s );			$res = M ()->execute ( $s );			dump ( $res );			dump ( $s );		}				M ( 'attribute' )->where ( "name='uid' AND field='int(10) unsigned NOT NULL'" )->setField ( 'field', 'int(10) NOT NULL' );	}	function token() {		// $list = M()->query("SELECT * FROM information_schema.`COLUMNS` WHERE TABLE_SCHEMA='weiphp' AND COLUMN_NAME='token'");		// //dump($list);		// foreach ($list as $vo){		// $t = str_replace('wp_', '', $vo['TABLE_NAME']);		// echo "M('$t')->where(\"token='\$token'\")->setField('token', \$public_id);<br/>";		// }		$list = M ( 'member_public' )->select ();		foreach ( $list as $vo ) {			$token = $vo ['token'];			$public_id = $vo ['public_id'];						$res = M ( 'member_public' )->where ( "token='$token'" )->setField ( 'token', $public_id );			M ( 'card_coupons' )->where ( "token='$token'" )->setField ( 'token', $public_id );			M ( 'card_member' )->where ( "token='$token'" )->setField ( 'token', $public_id );			M ( 'card_notice' )->where ( "token='$token'" )->setField ( 'token', $public_id );			M ( 'common_category' )->where ( "token='$token'" )->setField ( 'token', $public_id );			M ( 'credit_config' )->where ( "token='$token'" )->setField ( 'token', $public_id );			M ( 'custom_menu' )->where ( "token='$token'" )->setField ( 'token', $public_id );			M ( 'custom_reply_mult' )->where ( "token='$token'" )->setField ( 'token', $public_id );			M ( 'custom_reply_news' )->where ( "token='$token'" )->setField ( 'token', $public_id );			M ( 'custom_reply_text' )->where ( "token='$token'" )->setField ( 'token', $public_id );			M ( 'diy' )->where ( "token='$token'" )->setField ( 'token', $public_id );			M ( 'exam' )->where ( "token='$token'" )->setField ( 'token', $public_id );			M ( 'exam_answer' )->where ( "token='$token'" )->setField ( 'token', $public_id );			M ( 'exam_question' )->where ( "token='$token'" )->setField ( 'token', $public_id );			M ( 'follow' )->where ( "token='$token'" )->setField ( 'token', $public_id );			M ( 'forms' )->where ( "token='$token'" )->setField ( 'token', $public_id );			M ( 'forms_attribute' )->where ( "token='$token'" )->setField ( 'token', $public_id );			M ( 'forms_value' )->where ( "token='$token'" )->setField ( 'token', $public_id );			M ( 'keyword' )->where ( "token='$token'" )->setField ( 'token', $public_id );			M ( 'member' )->where ( "token='$token'" )->setField ( 'token', $public_id );						M ( 'neew_test' )->where ( "token='$token'" )->setField ( 'token', $public_id );			M ( 'shop_footer' )->where ( "token='$token'" )->setField ( 'token', $public_id );			M ( 'shop_product' )->where ( "token='$token'" )->setField ( 'token', $public_id );			M ( 'survey' )->where ( "token='$token'" )->setField ( 'token', $public_id );			M ( 'survey_answer' )->where ( "token='$token'" )->setField ( 'token', $public_id );			M ( 'survey_question' )->where ( "token='$token'" )->setField ( 'token', $public_id );			M ( 'test' )->where ( "token='$token'" )->setField ( 'token', $public_id );			M ( 'test_answer' )->where ( "token='$token'" )->setField ( 'token', $public_id );			M ( 'test_question' )->where ( "token='$token'" )->setField ( 'token', $public_id );			M ( 'vote' )->where ( "token='$token'" )->setField ( 'token', $public_id );			M ( 'vote_log' )->where ( "token='$token'" )->setField ( 'token', $public_id );			M ( 'weisite_category' )->where ( "token='$token'" )->setField ( 'token', $public_id );			M ( 'weisite_footer' )->where ( "token='$token'" )->setField ( 'token', $public_id );			M ( 'weisite_slideshow' )->where ( "token='$token'" )->setField ( 'token', $public_id );			M ( 'xydzp' )->where ( "token='$token'" )->setField ( 'token', $public_id );			M ( 'xydzp_option' )->where ( "token='$token'" )->setField ( 'token', $public_id );		}	}	function follow() {		$where = "openid!='' AND openid!='-1'";		$list = M ( 'member' )->where ( $where )->select ();				foreach ( $list as $vo ) {			$vo ['id'] = $map ['uid'] = $vo ['uid'];			$vo ['subscribe_time'] = $vo ['reg_time'];			$vo ['mobile'] = empty ( $vo ['mobile'] ) ? '' : $vo ['mobile'];			$res = M ( 'follow' )->add ( $vo );			if ($res) {				M ( 'member' )->where ( $map )->delete ();								$u_map ['id'] = $map ['uid'];				$save ['openid'] = $vo ['openid'];				$save ['token'] = $vo ['token'];				M ( 'ucenter_member' )->where ( $u_map )->save ( $save );			}		}	}	function member_public() {		$list = M ( 'member_public' )->select ();				foreach ( $list as $vo ) {			$data ['uid'] = $vo ['uid'];			$data ['mp_id'] = $vo ['id'];			$data ['is_creator'] = 1;			M ( 'member_public_link' )->add ( $data );		}	}}
